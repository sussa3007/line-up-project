# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

env:
  S3_BUCKET_NAME: zulseoza-ec2

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

#      # Github Repository Secrets를 통해 환경 변수 파일을 생성합니다.
#    - name: Generate Environment Variables File for Production
#      run: |
#        echo "LINEUP_DB_URL=$LINEUP_DB_URL" >> ./src/main/resources/env.yml
#        echo "LINEUP_DB_ID=$LINEUP_DB_ID" >> ./src/main/resources/env.yml
#        echo "LINEUP_DB_PW=$LINEUP_DB_PW" >> ./src/main/resources/env.yml
#        echo "KAKAO_AOUTH2_ID=$KAKAO_AOUTH2_ID" >> ./src/main/resources/env.yml
#        echo "KAKAO_AOUTH2_SECRETKEY=$KAKAO_AOUTH2_SECRETKEY" >> ./src/main/resources/env.yml
#        echo "GOOGLE_AOUTH2_SAMPLEPROJECT_ID=$GOOGLE_AOUTH2_SAMPLEPROJECT_ID" >> ./src/main/resources/env.yml
#        echo "GOOGLE_AOUTH2_SAMPLEPROJECT_SECRETKEY=$GOOGLE_AOUTH2_SAMPLEPROJECT_SECRETKEY" >> ./src/main/resources/env.yml
#        echo "ACCESS_TOKEN_EXPIRATION_MINUTES=$ACCESS_TOKEN_EXPIRATION_MINUTES" >> ./src/main/resources/env.yml
#        echo "REFRESH_TOKEN_EXPIRATION_MINUTES=$REFRESH_TOKEN_EXPIRATION_MINUTES" >> ./src/main/resources/env.yml
#        echo "JWT_SECRET_KEY=$JWT_SECRET_KEY" >> ./src/main/resources/env.yml
#        echo "SERVICE_URL=$SERVICE_URL" >> ./src/main/resources/env.yml
#        echo "ADMIN_EMAIL=$ADMIN_EMAIL" >> ./src/main/resources/env.yml
#      env:
#        LINEUP_DB_URL: ${{ secrets.LINEUP_DB_URL }}
#        LINEUP_DB_ID: ${{ secrets.LINEUP_DB_ID }}
#        LINEUP_DB_PW: ${{ secrets.LINEUP_DB_PW }}
#        KAKAO_AOUTH2_ID: ${{ secrets.KAKAO_AOUTH2_ID }}
#        KAKAO_AOUTH2_SECRETKEY: ${{ secrets.KAKAO_AOUTH2_SECRETKEY }}
#        GOOGLE_AOUTH2_SAMPLEPROJECT_ID: ${{ secrets.GOOGLE_AOUTH2_SAMPLEPROJECT_ID }}
#        GOOGLE_AOUTH2_SAMPLEPROJECT_SECRETKEY: ${{ secrets.GOOGLE_AOUTH2_SAMPLEPROJECT_SECRETKEY }}
#        ACCESS_TOKEN_EXPIRATION_MINUTES: ${{ secrets.ACCESS_TOKEN_EXPIRATION_MINUTES }}
#        REFRESH_TOKEN_EXPIRATION_MINUTES: ${{ secrets.REFRESH_TOKEN_EXPIRATION_MINUTES }}
#        JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
#        SERVICE_URL: ${{ secrets.SERVICE_URL }}
#        ADMIN_EMAIL: ${{ secrets.ADMIN_EMAIL }}

    - name: Run chmod to make gradlew executable
      run: chmod +x ./gradlew
      
    - name: Build with Gradle
      uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      with:
        arguments: build

      # build한 후 프로젝트를 압축합니다.
    - name: Make zip file
      run: zip -r ./line-up-project.zip .
      shell: bash

      # Access Key와 Secret Access Key를 통해 권한 확인
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }} # 등록한 Github Secret.
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} # 등록한 Github Secret.
        aws-region: ap-northeast-2

      # 압축한 프로젝트를 S3로 전송합니다.
    - name: Upload to S3
      run: aws s3 cp --region ap-northeast-2 ./line-up-project.zip s3://$S3_BUCKET_NAME/line-up-project.zip

      # CodeDeploy에게 배포 명령.
    - name: Code Deploy
      run: >
        aws deploy create-deployment --application-name zulseoza
        --deployment-config-name CodeDeployDefault.AllAtOnce
        --deployment-group-name zulseoza-group
        --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=line-up-project.zip
